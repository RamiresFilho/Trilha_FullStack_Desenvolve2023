body {
    font-family: 'Montserrat', sans-serif;
}

header {
    background: #bbbbbb;
    padding: 20px 0;
}

.caixa {
    position: relative; /*move um elemento RELATIVO para sua posiÃ§Ã£o original. */
    width: 940px; 
    margin: 0 auto; 
}

nav {
    position: absolute; /*Alternativa correta! Com o position: absolute, eu consigo posicionar meu elemento em qualquer lugar da pÃ¡gina. */
    top: 110px; /*A top propriedade afeta a posiÃ§Ã£o vertical de um elemento posicionado. Esta propriedade nÃ£o tem efeito em elementos nÃ£o posicionados.*/ 
    right: 0; 
}

nav li {
    display: inline; /* Exibe um elemento como um elemento embutido. Quaisquer propriedades de altura e largura nÃ£o terÃ£o efeito */ 
    margin: 0 0 0 15px; /* Delegamos para o navegador fazer a conta de calcular a largura que resta, dividir por dois, e adicionar metade em cada um dos lados. */
}

nav a {
    text-transform: uppercase; /*Transformar em letras maiusculas */
    color: black; /* Cor */
    font-weight: bold; /*Negrito*/
    font-size: 22px; /* Tamanho da font */
    text-decoration: none; /*Remover as decoraÃ§Ãµes */
}

nav a:hover {
    color: #c78c19;
    text-decoration: underline;
}

.produtos {
    width: 940px;
    margin: 0 auto; /* Cemtralizar o conteÃºdo com o margem automÃ¡tica */
    padding: 50px 0;
}

.produtos li {
    display: inline-block; /* "O tamanho pode ser ajustado, tanto na largura, quanto na altura." */
    text-align: center;
    width: 30%;
    vertical-align: top;
    margin: 0 1.5%;
    padding: 30px 20px;
    box-sizing: border-box;
    border: 2px solid #000000; /* A borda fica posicionada entre o padding e a margin. */
    border-radius: 10px; /* podemos desenhar o canto arredondado dos elementos. */
}
/* No hover, mapeamos o comportamento do mouse por cima do elemento, e podemos usar isso para destacar visualmente o elemento em questÃ£o.*/ 
.produtos li:hover { /* Quando passar o mouse irÃ¡ dar cor a borda */
    border-color: #c78c19;
    
}

.produtos li:active { /* Quando clicar com o mouse, altera a cor da borda */
    border-color: #088c19;
}

.produtos li:hover h2{ /* Alteramos a fonte do item da lista, que no caso Ã© o h2, quando passamos o mouse.*/ 
    font-size: 32px;
}

.produtos h2 {
    font-size: 30px;
    font-weight: bold;
}

.produtos-descricao {
    font-size: 18px;
}

.produtos-preco {
    font-size: 22px;
    font-weight: bold;
    margin-top: 10px;
}

footer { /* A tag footer, para o rodapÃ© da nossa pÃ¡gina */
    text-align: center;
    background: url("rodape.jpg");
    padding: 40px 0;
}
/*Os caracteres Unicode estÃ£o disponÃ­veis para serem usados como um complemento ao nosso texto.*/
.copyright {
    color: #ffffff;
    font-size: 13px;
    margin: 20px 0 0;
}
/* Apartir do main, configuramos a pÃ¡gina de contato. */
main {
    
}

form {
    margin: 40px 0;  
}

form label, form legend { /* Utilizamos a vÃ­rgula para replicar as configuraÃ§Ãµes jÃ¡ descritas */
    display: block;
    font-size: 20px;
    margin: 0 0 10px;
}

.input-padrao { /* Quando temos um estilo que pode ser repetido, uma excelente estratÃ©gia Ã© extrair isso para uma classe e usar a classe para aplicar esses estilos nos nossos elementos. */
    display: block;
    margin: 0 0 20px; /* A propriedade margin altera somente as definiÃ§Ãµes do espaÃ§amento externo do elemento, o espaÃ§o entre um elemento e outro. */
    padding: 10px 25px; /* A propriedade padding serve para alterarmos o espaÃ§amento interno, entre o conteÃºdo e a borda. */
    width: 50%;
}

.checkbox {
    margin: 20px 0;
}

.enviar {
    width: 40%;
    padding: 15px 0;
    background: orange;
    color: white;
    font-weight: bold;
    font-size: 18px;
    border: none;
    border-radius: 5px;
    transition: 1s all; /* Tempo da transiÃ§Ã£o do HOVER. */
    cursor: pointer; /* Para que o visualizador do mouse seja uma mÃ£o. */
}

.enviar:hover {
    background: darkorange;
    transform: scale(1.1); /* Utilizamos a propriedade transform: scale() para aumentar um elemento proporcionalmente.*/
    /* Utilizamos a propriedade transform: rotate() para "girar" um elemento em seu eixo.*/
}

table {
    margin: 20px 0 40px;
}

thead {
    background: #555555;
    color: white;
    font-weight: bold;
}

td, th {
    border: 1px solid #000000;
    padding: 8px 15px;
}
/* CSS da pÃ¡gina inicial */
.banner {
    width: 100%;
}
/* Conheceremos ainda outros dois pseudo-elementos do CSS: after e before. Esses dois elementos criam espaÃ§o para que o CSS atue antes ou depois de um determinado conteÃºdo. Continuaremos utilizando o tÃ­tulo para entender como a sintaxe se dÃ¡: 
.titulo-principal:before {content: "[";} - Antes
.titulo-principal:after {content:"]"} - Depois */
.titulo-principal { /* Se quiser adicionar estilo a apenas uma letra do texto, podemos usar o EX: .titulo-principal:first-letter 
    { font-weight: bold;} para que apenas a primeira letra fique em negrito. */
    text-align: center;
    font-size: 2em; /* Utilizamos o "em" para que o tamanho da fonte sempre seja o dobro do que estÃ¡ padronizado. */
    margin: 0 0 1em;
    clear: left; /* Para limpar o Float. */
}

.principal {
    padding: 3em 0;
    background: #FEFEFE;
    width: 940px; 
    margin: 0 auto;
}

.principal p { /* Outra opÃ§Ã£o interessante, muito comum no mercado editorial, Ã© configurar a primeira linha para itÃ¡lico. Para tanto, ajustamos para que todos os parÃ¡grafos (p) terÃ£o a primeira linha (first-line) no estilo italic. Ex: p:first-line 
{font-style: italic; } */
    margin: 0 0 1em;
}

.principal strong {
    font-weight: bold;
}

.principal em {
    font-style: italic;
}

.utensilios {
    width: 120px;
    float: left; /* Tanto o float:left quanto o float: right servem para que o elemento se destaque na tela, deixe de ocupar o espaÃ§o em que estava, para que os outros elementos possam se posicionar ao redor dele. */
    margin: 0 20px 20px 0; /* Cada nÃºmero descrito na margem representa a seguinte sequÃªncia: 0 (PRA CIMA) 20px(DIREITA) 20px (BAIXO) 0 (ESQUERDA) */
}

.mapa {
    padding: 3em 0; /* 3em ( pra cima e pra baixo ) e 0 ( para as laterais ) */
    background: linear-gradient(#FEFEFE, #888888);
    /* Precisamos aqui ajustar a transiÃ§Ã£o da cor branca para o cinza, entÃ£o utilizaremos o linear-gradient() que receberÃ¡ as cores que desejamos trabalhar. O interessante dessa propriedade Ã© que podemos adiciconar quantas cores quisermos, que o CSS irÃ¡ administrÃ¡-las automaticamente. Ã‰ possÃ­vel, inclusive, ajustar a inclinaÃ§Ã£o das cores, por exemplo 45deg e entÃ£o ficarÃ£o posicionadas em 45Âº EX: background: linear-gradient(45deg, orange, blue, red, black);. Como estamos utilizando quatro cores no exemplo, hÃ¡ valores subentendidos em cada uma delas, na sequÃªncia: 0%, 25%, 50%, e 75% para a Ãºltima cor da sequÃªncia. Mas podemos manipular esses valores de acordo com nosso interesse , como definir que orange, por exemplo, terÃ¡ o valor de 50% EX: background: linear-gradient(45deg, orange 50%, blue, red, black);. AlÃ©m do degradÃª linear(linear-gradient) temos ainda a opÃ§Ã£o radial(radial-gradient), que organiza a transiÃ§Ã£o de cores de maneira circular.*/
}

.mapa-conteudo {
    width: 940px; 
    margin: 0 auto;
}

.mapa p {
    margin: 0 0 2em;
    text-align: center;
}

.beneficios {
    padding: 3em 0;
    background: #888888;
}

.conteudo-beneficios {
    width: 640px;
    margin: 0 auto;
}

.lista-beneficios {
    width: 40%;
    display: inline-block;
    vertical-align: top; /* Para que a lista fique alinhada pela parte de cima.  */
}

.itens {
    line-height: 1.5; /* Altura da linha */ 
}

.itens:first-child { /* Pega o primeiro item da lista. Tem tambÃ©m o "(:nth-child(E aqui colocar o nÃºmero da posiÃ§Ã£o do item da lista) se colocarmos o valor entre parÃªnteses (nth-child(2n) estamos trabalhando com os itens na posiÃ§Ã£o par da lista.*/
    font-weight: bold;
}

.itens:before { /* utilizaremos o pseudo-elemento before para que antes do conteÃºdo da lista, haja uma estrela.  */
    content: "ðŸŸŠ";
}

.imagem-beneficios {
    width: 60%;
    opacity: 1; /* A opacidade dos elementos. */
    transition: 400ms;
    box-shadow: 10px 10px 10px 0 #000000; 
    /* Utilizamos o box-shadow (Sombra na caixa) para colocarmos sombra nos elementos. Ela Ã© composta pelo EIXO "X Y GRAU DE ESPALHAMENTO COR"
    e com o uso de vÃ­rgulas posso adicionar uma sombra sobre a outra. Para textos utilizamos o text-shadow. */
}

.imagem-beneficios:hover {
    opacity: 0.3;
}

.video {
    width: 560px;
    margin: 2em auto;
}

@media screen and (max-width: 480px) { /* Ã‰ dentro dessa media query que criamos um estilo visual que compreenda telas de atÃ© 480px. */
    .caixa, .principal, .conteudo-beneficios, .mapa-conteudo, .video {
        width: 100%; /* todas as classes acima, irÃ£o receber a largura automÃ¡tica. */
    }

    h1 {
        text-align: center;
    }

    nav {
        position: static;
    }

    .lista-beneficios, .imagem-beneficios {
        width: 100%;
    }


}

@media screen and (max-width: 942px) {
    .caixa, .principal, .conteudo-beneficios, .mapa-conteudo, .video {
        width: 100%; /* todas as classes acima, irÃ£o receber a largura automÃ¡tica. */
    }

    h1 {
        text-align: center;
    }

    nav {
        position: static;
    }

    .lista-beneficios, .imagem-beneficios {
        width: 100%;
    }


}
/* Seletores avanÃ§ados CSS
Seletor >, para acessar os filhos de determinado elemento. Por exemplo, para acessar todos os p dentro de main:
main > p {
}
Seletor +, para acessar o primeiro irmÃ£o de determinado elemento. Por exemplo, para acessar o primeiro p apÃ³s um img:
img + p {
}
Seletor ~, para acessar todos os irmÃ£os de determinado elemento. Por exemplo, para acessar todos os p apÃ³s um img:
img ~ p {
}
Seletor not, para acessar os elementos, exceto algum. Por exemplo, para acessar todos os p dentro de main, exceto o p que tem id missao:
main p:not(#missao) {
}
section > p + h2 > O Ãºltimo h2 Ã© filho direto da section e irmÃ£o do p.
*/